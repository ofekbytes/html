
/*
* *** Attention ***
* This program will not work because the program is using google API location service.
* This service need a paying google account.  
*/

<!DOCTYPE html>
<html>

<head>
    <title>18.02_geolocation__API.html</title>

    <script src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
</head>


<!-- <body onload="start_here()"> -->

<body>
    <h1>Your Current Location is: </h1>
    <p id="output"></p>

    <script>

        var geocoder;

        /* 
        * 1. start_here() --> 
        */
        function start_here() {
            geocoder = new google.maps.Geocoder();
        }

        if (navigator.geolocation) {
            // 2. successFunction(position) 
            // errorFunction()
            navigator.geolocation.getCurrentPosition(successFunction, errorFunction);
        }


        /*
        * 2. successFunction --> 
        */
        function successFunction(position) {
            var lat = position.coords.latitude;
            var lng = position.coords.longitude;
            //
            codeLatLng(lat, lng)
        }


        /*
        * 3. errorFunction() --> 
        */
        function errorFunction() {
            alert("Geocoder failed");
        }


        /*
        * 4. codeLatLng() --> 
        */
        function codeLatLng(lat, lng) {

            var latlng = new google.maps.LatLng(lat, lng);
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    console.log(results)
                    if (results[1]) {
                        //formatted address
                        alert(results[0].formatted_address)
                        //find country name
                        for (var i = 0; i < results[0].address_components.length; i++) {
                            for (var b = 0; b < results[0].address_components[i].types.length; b++) {

                                //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                                if (results[0].address_components[i].types[b] == "administrative_area_level_1") {
                                    //this is the object you are looking for
                                    city = results[0].address_components[i];
                                    break;
                                }
                            }
                        }
                        //city data
                        alert(city.short_name + " " + city.long_name)


                    } else {
                        alert("No results found");
                    }
                } else {
                    alert("Geocoder failed due to: " + status);
                }
            });
        }


    </script>

</body>

</html>