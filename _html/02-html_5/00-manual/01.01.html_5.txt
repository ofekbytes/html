
## HTML 5 ##

1. HTML 5
2. HTML5 - New Elements in HTML5
3. HTML5 - The List of Content Models
4. HTML5 - header tag
5. HTML5 - footer tag
6. HTML5 - nav tag
7. HTML5 - <article> tag  (is the <div> tag of html4)
8. HTML5 - <section> tag Element
9. HTML5 - <aside> tag Element
10. HTML5 - <audio> tag Element
11. HTML5 - <video> tag Element
12. HTML5 - Progress Bar -  <progress> tag Element -
13. HTML5 Web Storage (API) - cookie(), sessionStorage(), localStorage()
14. HTML5 Geolocation API

.
.
1. HTML 5 - 

- HTML 5 - first line declaration
<!DOCTYPE HTML> 

- character encoding (charset) declaration
<meta charset="UTF-8">

-!- The default character encoding in HTML5 is UTF-8.
.
.
2. HTML5 - New Elements in HTML5 - 

<article>, <aside>, <audio>, <canvas>, <datalist>, <details>, <embed>, <footer>, <header>, <nav>, <output>, <progress>, <section>, <video>  

- Forms
-- The Web Forms 2.0 specification allows for creation of more powerful forms and more compelling user experiences.
-- Date pickers, color pickers, and numeric stepper controls have been added.
-- Input field types now include email, search, and URL.
-- PUT and DELETE form methods are now supported.

- Integrated API (Application Programming Interfaces) 
-- Drag and Drop
-- Audio and Video
-- Offline Web Applications
-- History
-- Local Storage
-- Geolocation
-- Web Messaging
.
.
3. HTML5 - The List of Content Models - 

- HTML elements typically belonged in either the "block level" -or- "inline content" model. 

- HTML5 introduces seven main content models.
-- Metadata
-- Embedded
-- Interactive
-- Heading
-- Phrasing
-- Flow
-- Sectioning 


- Content Models

Metadata: 
Content that sets up the presentation or behavior of the rest of the content. 
These elements are found in the head of the document.
Elements: 
<base>, <link>, <meta>, <noscript>, <script>, <style>, <title>

Embedded: 
Content that imports other resources into the document.
Elements: 
<audio>, <video>, <canvas>, <iframe>, <img>, <math>, <object>, <svg>

Interactive: 
Content specifically intended for user interaction.
Elements: 
<a>, <audio>, <video>, <button>, <details>, <embed>, <iframe>, <img>, <input>, <label>, <object>, <select>, <textarea>

Heading: 
Defines a section header.
Elements: 
<h1>, <h2>, <h3>, <h4>, <h5>, <h6>, <hgroup>


Phrasing: 
This model has a number of inline level elements in common with HTML4.
Elements: 
<img>, <span>, <strong>, <label>, <br />, <small>, <sub>, and more.


Content Models

Flow content: 
Contains the majority of HTML5 elements that would be included in the normal flow of the document.

Sectioning content: 
Defines the scope of headings, content, navigation, and footers.
Elements: <article>, <aside>, <nav>, <section>

--- example: Content Models:
    <html5-Content-Models.jpeg>

--- example: A generic HTML5 page structure looks like this:
    <HTML5-page-structure.png>
.
.
4. HTML5 - header tag -

-- The <header> element represents a container for introductory content or a set of navigational links.
-- A <header> element typically contains:
--- one or more heading elements (<h1> - <h6>)
--- logo or icon
--- authorship information
--- You can have several <header> elements in one document.
-!- A <header> tag cannot be placed within a <footer>, <address> or another <header> element.

- header html4 style:
  <div id="header">

- header html5 style:
  <header>

- <header> element is appropriate for use inside the body tag.

--- example: header element tag

<!DOCTYPE html>
<html>
    <head></head>
    <body>
        <header>
            <h1>Title 1</h1>
            <h3>sub title</h3>
        </header>
        <header>
            <h1>Title 2</h1>
            <div>div 1</div>
            <div>div 2</div>
            <span>  span 1 </span> <span> span 2</span>
        </header>
    </body>
</html>

--- example: header element tag
    <05.01_tag__header.html>

.
.
5. HTML5 - footer tag - 

- <footer> Element

-- <footer> element refer to a section located at the very bottom of the web page.
   <footer> footer element </footer>

-- <footer> tag common use:
- Contact Information
- Privacy Policy
- Social Media Icons
- Terms of Service
- Copyright Information
- Sitemap and Related Documents

--- example: footer tag
    <06.01_tag__footer.html>

.
.
6. HTML5 - nav tag - 

-  <nav> Element

-- <nav> tag represents a section of a page that links to other pages -or- to certain sections within the page. 

-- <nav> tag defines a set of navigation links.

-!- NOT all links of a document should be inside a <nav> element. 
   <nav> element is intended only for major block of navigation links.

-!- Browsers, such as screen readers for disabled users, can use this element to determine whether to omit the initial rendering of this content.

--- example: <nav> tag create a section with navigation links. 

<nav>
    <ul>
        <li><a href="#">Home</a></li>
        <li><a href="#">Services</a></li>
        <li><a href="#">About us</a></li>
    </ul>
</nav>

<nav>
    <span>test1</span>
    <span>test1</span>
    span>test1</span>
</nav>


--- example: <nav> tag create a section with navigation links. 
    <07.01_tag__nav.html>

-!- all of the links in a document should be inside a <nav> element. 
   <nav> element is intended only for major blocks of navigation links. 
   Typically, the <footer> element often has a list of links that don't need to be in a <nav> element.

.
.
7. HTML5 - <article> tag  (is the <div> tag of html4) - 

-  <Article> tag is a self-contained, 
   independent piece of content that can be used and distributed separately from the rest of the page or site. 
   An article should make sense on its own and it should be possible to distribute it independently from the rest of the site.

-- The <article> tag specifies independent, self-contained content.

-- This could be:
--- a forum post
--- a magazine or newspaper article, 
--- a blog entry, a comment, 
--- an interactive widget or gadget, 
--- or any other independent piece of content. 
--- News story
--- Comment

-!- The <article> tagh element replaces the <div> tag element that was widely used in HTML4, along with an id or class.
-!- <article> tag instead of <div> tag

--- example:

    <article>
        <h1>The article title</h1> 
        <p>Contents of the article element </p>
    </article>


    <article>
        <h1>article H1</h1>
        <p>article p tag</p>
    </article>

--- example: article tag
    <08.01_tag__artical.html>

-!- When an <article> element is nested, 
   the inner element represents an article related to the outer element. 
   example:
   blog post comments can be <article> elements nested in the <article> representing the blog post.

.
.
8. HTML5 - <section> tag Element - 

- <section> is a logical container of the page or <article>. 
-- Sections can be used to divide up content within an article.
--- example:
    a homepage could have a section for introducing the company, 
    another section for news items, 
    and still another section for contact information.

-- Each <section> should be identified, typically by including a heading (h1-h6 element) as a child of the <section> element.

--- example: <section> tag inside <article> tag

    <article>
        <h1>article</h1>
        <section>
            <h1>section Heading</h1>
            <p>section content</p>
        </section>
    </article>

--- example: <section> tag inside <article> tag
    <09.01_tag__section.html>

--- example: artical and section example
    <article>
        <h1>Welcome</h1>
        <section>
            <h1>Heading</h1>
            <p>content or image</p>
        </section>
        <section>
            <h1>Heading</h1>
            <p>content or image</p>
        </section>
    </article>

    <article>
        <h1>Welcome</h1>0. HTML5 - <audio> tag Element
        <section>
            <h1>Heading</h1>
            <p>content or image</p>
        </section>
    </article>

    <article>
        <h1>Welcome</h1>
        <section>
            <h1>Heading</h1>
            <p>content or image</p>
        </section>
    </article>

-!- If it makes sense to separately syndicate/unate the content of a <section> element, use an <article> element instead.

-!- separated text subject separated <article> tag
.
.
9. HTML5 - <aside> tag Element - 

-  <aside> tag is secondary or relating to content (tangential content) 
   which could be considered separate from but indirectly related to the main content.
-- <aside> tag is used within an <article> tag. 
-- <aside> tag defines some content aside from the content it is placed in.
-!- the content of the <aside> should be specifically related to that article.
    (The aside content should be related to the surrounding content).

--- example: <aside> tag inside <artical> tag.

    <artical>
        <section>
            <h1>JSON</h1>
            <p>In computing, JavaScript Object Notation (JSON) is an open-standard file format that uses human-readable
                text to transmit data objects consisting of attributeâ€“value pairs and array data types.</p>
        </section>
        <aside>
            <!-- <h1>XML</h1> -->
            <p>XML (Extensible Markup Language) - is a markup language that defines a set of rules for encoding
                documents in a format that is both human-readable and machine-readable.</p>
        </aside>
    </artical>

--- example: <aside> tag inside <artical> tag.
    <10.01_tag__aside.html>

-!- When an <aside> tag is used outside of an <article> tag, its content should be related to the surrounding content.

.
.
10. HTML5 - <audio> tag Element -

- The HTML5 <audio> element specifies a standard for embedding audio in a web page.

- There are two different ways to specify the audio source file's URL. 
-- source attribute "src="source-of-audio"
-- <source> tag nest the <audio> tag (<source> tag inside <audio> tag):
   -!- Multiple <source> elements can be linked to different audio files. 
        The browser will use the first recognized format.

--- example: source attribute "src="source-of-audio"

    <audio src="URL/audio.mp3" controls>
         Audio element not supported by your browser
    </audio>

--- example: <source> tag nest the <audio> tag (<source> tag inside <audio> tag) 
             and display error message if audio no supported:

    <audio controls>
        <source src="URL/audio.mp3" type="audio/mpeg">
        <source src="URL/audio.ogg" type="audio/ogg">
        Error - Audio element not supported by your browser. 
    </audio>


- <audio> tag support 3 file formats: 
-- MP3 --  type="audio/mpeg"
-- WAV --  type="audio/wav"
-- OGG --  type="audio/ogg"


- <audio> Attributes
-- autoplay - start playing audio as soon as it is ready.
-- controls - display audio controls, (play, pause, volume).
-- loop -  play audio endless times
-- muted - audio output should be muted.
-- preload - audio loaded when the page loads.

--- example: <audio> tag Element .
    <11.01_tag__audio.html>

.
.
11. HTML5 - <video> tag Element -

- The HTML5 <video> element specifies a standard for embedding video in a web page.

- <video> tag support 3 file formats: 
-- MP4  --  type="video/mp4"
-- WebM --  type="video/WebM"
-- OGG  --  type="video/ogg"

--- example: video tag + controls Attributes

    <video controls>
        <source src="https://ofekbytes.github.io/assets/videos/sea.mp4" type="video/mp4">
        <source src="https://ofekbytes.github.io/assets/videos/sea.webm" type="video/WebM">
        Your browser does not support the video element.
    </video>


- <video> Attributes
-- autoplay - start playing audio as soon as it is ready.
-- controls - display audio controls, (play, pause, volume).
-- loop -  play audio endless times
-- muted - audio output should be muted.
-- preload - audio loaded when the page loads.
-- width - width of video display.
-- height - height of video display.
-!- If height and width are not set, the page might flicker while the video loads.


--- example: <video> tag Element .
    <12.01_tag__video.html>

.
.
12. HTML5 - Progress Bar -  <progress> tag Element -


- The HTML5 <progress> element provides the ability to create progress bars on the web.

--- example: Progress Bar

    Downloading progress:
    <progress value="22" max="100"></progress>

- <progress> Attributes
-- Value: (current number value) - Specifies how much of the task has been completed.
-- Max: (total/max number value) -  Specifies how much work the task requires in total.

--- example: <video> tag Element .
    <13.01_tag__progress.html>


.
.
13. HTML5 Web Storage (API) - cookie(), sessionStorage(), localStorage()


- Capacity
-- Cookies - 4kb
-- Session Storage - 5mb
-- Local Storage - 10mb
.
.
- Expires
-- Cookies - Manually set	
-- Session Storage - On tab close
-- Local Storage - Never (no expiration date)
.
.
- Storage Location
-- Cookies - Browser and server	
-- Session Storage - Browser only
-- Local Storage - Browser only
.
.
- Sent with requests
-- Cookies - Yes
-- Session Storage - No
-- Local Storage - No
.
.
The Advantages of Web Storage
- More secure
- Faster
- Stores a larger amount of data
- Stored data is not sent with every server request

-!- Local storage is per domain. 
    All pages from one domain can store and access the same data.

.
.
- Cookies - 

-- Cookies are data, stored in small text files, on your computer.
   When a web server has sent a web page to a browser, the connection is shut down, and the server forgets everything about the user.
   Cookies were invented to solve the problem "how to remember information about the user":
   When a user visits a web page, his/her name can be stored in a cookie.
   Next time the user visits the page, the cookie "remembers" his/her name.
   Cookies are saved in name-value pairs:
   When a browser requests a web page from a server, cookies belonging to the page are added to the request. 
   This way the server gets the necessary data to "remember" information about users.

--- example: username
    username = 'John Doe';

JavaScript cookies property ("document.cookie") can create, read, delete cookies.

document.cookie = "hello=true";
document.cookie = "doSomethingOnlyOnce=true; expires=Fri, 31 Dec 9999 23:59:59 GMT";
document.cookie = "person=beau; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/"

document.cookie = "person=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";

console.log(document.cookie)


.
.
- Session Storage - 

-- Storing a Value:
   sessionStorage.setItem("key1", "value1");
   sessionStorage.setItem('breakfast', 'cereal');

-- Getting a Value (print value):
   console.log(sessionStorage.getItem("key1")); 
   console.log(sessionStorage.getItem('breakfast'));

-- Removing a Value:
   sessionStorage.removeItem("key1");
   sessionStorage.removeItem('breakfast');

-- Removing All Values:
   sessionStorage.clear();

.
.
- Local Storage (localStorage) - 

-- Storing a Value:
   localStorage.setItem("key1", "value1");
   localStorage.setItem('breakfast', 'cereal');

-- Getting a Value (print value):
   console.log(localStorage.getItem("key1")); 
   console.log(localStorage.getItem('breakfast'));

-- Removing a Value:
   localStorage.removeItem("key1");
   localStorage.removeItem('breakfast');

-- Removing All Values:
   localStorage.clear();


- youtube: (Cookies, sessionStorage, localStorage)
  https://www.youtube.com/watch?v=AwicscsvGLg&t=2s


url: cookies
https://www.w3schools.com/js/js_cookies.asp
https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies

.
.
14. HTML5 Geolocation API

- The HTML 5 Geolocation API is used to locate a user's position .
  Since this can compromise privacy, the position is not available unless the user approves it.


--- example: get Current Position - getCurrentPosition() :
    navigator.geolocation.getCurrentPosition();

Parameters:
showLocation (mandatory): Defines the callback method that retrieves location information.
ErrorHandler(optional): Defines the callback method that is invoked when an error occurs in processing the asynchronous call.
Options (optional): Defines a set of options for retrieving the location information.


Presenting Data in 2/two ways: Geodetic -and- Civic.

1. geodetic - describe position latitude -and- longitude.
2. civic - describe location data.

-- getCurrentPosition() method returns an object (latitude, longitude, accuracy properties).

--- example: 



url: geolocation
https://www.w3schools.com/html/html5_geolocation.asp
